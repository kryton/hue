{"body":"<div><div id=\"thread_reservation_aggregate_limit\"><div class=\"hue-doc-title\">THREAD_RESERVATION_AGGREGATE_LIMIT Query Option (Impala 3.1 or higher only)</div><div><p>\n      The <span class=\"hue-doc-codeph\">THREAD_RESERVATION_AGGREGATE_LIMIT</span> query option limits the number of\n      reserved threads for a query across all nodes on which it is executing. The option is\n      intended to prevent execution of complex queries that can consume excessive CPU or\n      operating system resources on a cluster. Queries that have more threads than this\n      threshold are rejected by Impalaâ€™s admission controller before they start executing.\n    </p><p>\n      For example, an Impala administrator could set a default value of\n      <span class=\"hue-doc-codeph\">THREAD_RESERVATION_AGGREGATE_LIMIT=2000</span> for a resource pool on a 100 node\n      where they expect only relatively simple queries with less than 20 threads per node to\n      run. This will reject queries that require more than 2000 reserved threads across all\n      nodes, for example a query with 21 fragments running on all 100 nodes of the cluster.\n    </p><p>\n      You can override the default value per-query or per-session, in the same way as other\n      query options, if you do not want the default\n      <span class=\"hue-doc-codeph\">THREAD_RESERVATION_AGGREGATE_LIMIT</span> value to apply to a specific query or\n      session.\n    </p><p><b>Syntax:</b><span class=\"hue-doc-codeph\">SET THREAD_RESERVATION_AGGREGATE_LIMIT=number;</span></p><p><b>Type:</b> numeric\n    </p><p><b>Default:</b> 0 (no limit)\n    </p><p><b>Added in:</b>Impala 3.1</p></div></div></div>","title":"THREAD_RESERVATION_AGGREGATE_LIMIT Query Option (Impala 3.1 or higher only)"}